C51 COMPILER V9.60.7.0   SYS                                                               09/27/2024 10:00:24 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SYS
OBJECT MODULE PLACED IN .\Objects\sys.obj
COMPILER INVOKED BY: D:\tool chain\keil c51 v6\C51\BIN\C51.EXE StdDriver\src\sys.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR
                    -(.\Device\Include;.\StdDriver\inc;.\RTX Tiny2\inc;.\TM1650;.\Application) DEFINE(FOSC_240000) DEBUG OBJECTEXTEND SYMBOLS
                    - PRINT(.\Listings\sys.lst) TABS(2) OBJECT(.\Objects\sys.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //  Date   : Jan/21/2020
  11          //********************************************************************************************************
             -***
  12          #include "MS51_16K.H"
  13          
  14          bit BIT_TMP;
  15          unsigned char data  TA_REG_TMP,BYTE_TMP,SFRS_TMP;
  16          
  17            /**
  18            * @brief This API configures modify system HIRC value
  19            * @param[in] u8FsysMode . Valid values are:
  20            *                       - \ref HIRC_24                 :Internal HIRC 24MHz .
  21            *                       - \ref HIRC_16                 :Internal HIRC 16MHz.
  22            *                       - \ref HIRC_166                :Internal HIRC 16.6MHz.
  23            * @note      None.
  24            * @exmaple : MODIFY_HIRC(HIRC_24);
  25            */
  26           void MODIFY_HIRC(unsigned char u8HIRCSEL)
  27          {
  28   1          unsigned char data hircmap0,hircmap1,offset;
  29   1          unsigned int trimvalue16bit;
  30   1          /* Check if power on reset, modify HIRC */
  31   1          SFRS = 0 ;
  32   1          switch (u8HIRCSEL)
  33   1          {
  34   2            case HIRC_24:
  35   2              IAPAL = 0x38;
  36   2            break;
  37   2            case HIRC_16:
  38   2              IAPAL = 0x30;
  39   2            break;
  40   2            case HIRC_166:
  41   2              IAPAL = 0x30;
  42   2            break;
  43   2          }
  44   1          set_CHPCON_IAPEN;
  45   1          IAPAH = 0x00;
  46   1          IAPCN = READ_UID;
C51 COMPILER V9.60.7.0   SYS                                                               09/27/2024 10:00:24 PAGE 2   

  47   1          set_IAPTRG_IAPGO;
  48   1          hircmap0 = IAPFD;
  49   1          IAPAL++;
  50   1          set_IAPTRG_IAPGO;
  51   1          hircmap1 = IAPFD;
  52   1          switch (u8HIRCSEL)
  53   1          {
  54   2            case HIRC_166:
  55   2              trimvalue16bit = ((hircmap0 << 1) + (hircmap1 & 0x01));
  56   2              trimvalue16bit -= 14;
  57   2      
  58   2              IAPCN = READ_DID;
  59   2              IAPAL = 1;
  60   2              IAPAH = 0;
  61   2              set_IAPGO;
  62   2              if ((IAPFD==0x4B)||(IAPFD==0x52)||(IAPFD==0x53))
  63   2              {
  64   3                offset = hircmap0&0x3F;
  65   3                if (offset<7)
  66   3                  trimvalue16bit -= 10;
  67   3                else 
  68   3                  trimvalue16bit -= 1;
  69   3              }
  70   2              hircmap1 = trimvalue16bit & 0x01;
  71   2              hircmap0 = trimvalue16bit >> 1;
  72   2      
  73   2            break;
  74   2            default: break;
  75   2          }
  76   1          TA = 0xAA;
  77   1          TA = 0x55;
  78   1          RCTRIM0 = hircmap0;
  79   1          TA = 0xAA;
  80   1          TA = 0x55;
  81   1          RCTRIM1 = hircmap1;
  82   1          clr_CHPCON_IAPEN;
  83   1      }
  84          
  85          #if 0
                /**
                * @brief This API configures system clock source
                * @param[in] u8FsysMode . Valid values are:
                *                       - \ref FSYS_HIRC                :Internal HIRC (16MHz as default).
                *                       - \ref FSYS_LIRC                :Internal LIRC.
                *                       - \ref FSYS_OSCIN_P00           :External clock input from P0.0.
                * @note      None.
                * @exmaple : FsysSelect(FSYS_LIRC);
                */
              void FsysSelect(unsigned char u8FsysMode)
              {
                switch (u8FsysMode)
                {
                      //***** HIRC enable part *****  
                  case FSYS_HIRC:
                      ClockEnable(FSYS_HIRC);                 //Enable HIRC
                      ClockSwitch(FSYS_HIRC);                 //Switching system clock HIRC
                  break;
                  
                  //***** LIRC enable part*****
                  case FSYS_LIRC:
                      ClockSwitch(FSYS_LIRC);                 // LIRC always on switch system to LIRC
                      clr_CKEN_HIRCEN;                        // Disable HIRC if needed 
C51 COMPILER V9.60.7.0   SYS                                                               09/27/2024 10:00:24 PAGE 3   

                  break;
                  
                  /***** ECLK enable part clock in with P3.0 *****/ 
                  case FSYS_OSCIN_P30:
                      ClockEnable(FSYS_HIRC);                 //Enable and system clock to HIRC
                      ClockSwitch(FSYS_HIRC);
                      ClockEnable(FSYS_OSCIN_P30);            //Enable External clock source
                      ClockSwitch(FSYS_OSCIN_P30);            //Switching system clock to OSCIN 
                      clr_CKEN_HIRCEN;                        //step5: disable HIRC if needed 
                  break;
                }
              }
              
              void ClockEnable(unsigned char u8FsysMode)
              {
                switch (u8FsysMode)
                {
                  /***** HIRC enable part ******/
                  case FSYS_HIRC:
                      set_CKEN_HIRCEN;                        //step1: Enable extnal clock source.
                      while((CKSWT|CLR_BIT5)==CLR_BIT5);      //step2: check clock source status and wait for ready
                  break;
                  /***** ECLK P30 enable part ******/
                  case FSYS_OSCIN_P30:
                      TA=0xAA;TA=0x55;CKEN|=0xC0;                        //step1: Enable extnal clock source.
                      while((CKSWT|CLR_BIT3)==CLR_BIT3);      //step2: check clock source status and wait for ready
                  break;
                }
              }
              
              void ClockDisable(unsigned char u8FsysMode)
              {
                SFRS = 0;
                switch (u8FsysMode)
                {
                   /***** HIRC Disable part ******/
                  case FSYS_HIRC:
                      clr_CKEN_HIRCEN;                        
                  break;
                  //***** ECLK from P3.0 Disable part ******/
                  case FSYS_OSCIN_P30:
                     TA=0xAA;TA=0x55;CKEN&=0x3F;
                  break;
                }
              }
              
              void ClockSwitch(unsigned char u8FsysMode)
              {
                SFRS = 0 ;
                BIT_TMP=EA;EA=0;
                switch (u8FsysMode)
                {
                  /***** HIRC Disable part ******/
                  case FSYS_HIRC:
                      clr_CKSWT_OSC1;
                      clr_CKSWT_OSC0;
                  break;
                  /***** LIRC Disable part******/
                  case FSYS_LIRC:
                      set_CKSWT_OSC1;
                      clr_CKSWT_OSC0;
                  break;
C51 COMPILER V9.60.7.0   SYS                                                               09/27/2024 10:00:24 PAGE 4   

                  /***** ECLK P30 Disable part ******/
                  case FSYS_OSCIN_P30:
                      set_CKSWT_ECLKST;
                  break;
                }
                EA = BIT_TMP;
              }
              
              #endif
C51 COMPILER V9.60.7.0   SYS                                                               09/27/2024 10:00:24 PAGE 5   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
RCTRIM0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0084H  1
RCTRIM1. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0085H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
PWMCON0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
BYTE_TMP . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0000H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
SFRS_TMP . . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0001H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
TA . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C7H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
TA_REG_TMP . . . . . . . . . . . . . .  PUBLIC   DATA   U_CHAR   0002H  1
UINT32 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
UINT16 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
BIT_TMP. . . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0000H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
CHPCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009FH  1
SFRS . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
SCON_1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
IAPTRG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A4H  1
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
_MODIFY_HIRC . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  u8HIRCSEL. . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  hircmap0 . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  hircmap1 . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  offset . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
  trimvalue16bit . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
ADCCON0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
I2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
BIT. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  BIT      -----  1
IAPAH. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A7H  1
IAPFD. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AEH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
IAPAL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A6H  1
IAPCN. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AFH  1
UINT8. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    247    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
