C51 COMPILER V9.60.7.0   I2C_GPIO                                                          09/27/2024 10:00:24 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE I2C_GPIO
OBJECT MODULE PLACED IN .\Objects\I2C_GPIO.obj
COMPILER INVOKED BY: D:\tool chain\keil c51 v6\C51\BIN\C51.EXE Application\I2C_GPIO.c LARGE OPTIMIZE(8,SPEED) BROWSE INC
                    -DIR(.\Device\Include;.\StdDriver\inc;.\RTX Tiny2\inc;.\TM1650;.\Application) DEFINE(FOSC_240000) DEBUG OBJECTEXTEND SYMB
                    -OLS PRINT(.\Listings\I2C_GPIO.lst) TABS(2) OBJECT(.\Objects\I2C_GPIO.obj)

line level    source

   1          #include "i2c_gpio.h"
   2          #include "timer.h"
   3          #include "hardware.h"
   4          #include <intrins.h>
   5          /**
   6           * @brief       初始化IIC
   7           * @param       无
   8           * @retval      无
   9           */
  10          void IIC_Init(void)
  11          {
  12   1        #ifdef DEVOARD 
                P13_OPENDRAIN_MODE;
                P14_OPENDRAIN_MODE;
                #else
  16   1        P00_OPENDRAIN_MODE;
  17   1        P04_OPENDRAIN_MODE;
  18   1        #endif
  19   1      }
  20          
  21          static void IIC_SDA(uint8_t val)
  22          {
  23   1        if(val)
  24   1          TM1650_SDA = 1;
  25   1        else
  26   1          TM1650_SDA = 0;
  27   1      }
  28          
  29          static void IIC_SCL(uint8_t val)
  30          {
  31   1        if(val)
  32   1          TM1650_SCL = 1;
  33   1        else
  34   1          TM1650_SCL = 0;
  35   1      }
  36          
  37          /**
  38           * @brief       IIC延时函数,用于控制IIC读写速度
  39           * @param       无
  40           * @retval      无
  41           */
  42          static void IIC_delay2us(void)
  43          {
  44   1        _nop_();
  45   1        _nop_();
  46   1        _nop_();
  47   1        _nop_();
  48   1        _nop_();
  49   1        _nop_();
  50   1        _nop_();
  51   1        _nop_();
  52   1        _nop_();
  53   1        _nop_();
C51 COMPILER V9.60.7.0   I2C_GPIO                                                          09/27/2024 10:00:24 PAGE 2   

  54   1        _nop_();
  55   1        _nop_();
  56   1        _nop_();
  57   1        _nop_();
  58   1        _nop_();
  59   1        _nop_();
  60   1        _nop_();
  61   1        _nop_();
  62   1        _nop_();
  63   1        _nop_();
  64   1        _nop_();
  65   1        _nop_();
  66   1        _nop_();
  67   1        _nop_();
  68   1        _nop_();
  69   1        _nop_();
  70   1        _nop_();
  71   1        _nop_();
  72   1        _nop_();
  73   1        _nop_();
  74   1        _nop_();
  75   1        _nop_();
  76   1        _nop_();
  77   1        _nop_();
  78   1        _nop_();
  79   1        _nop_();
  80   1        _nop_();
  81   1        _nop_();
  82   1        _nop_();
  83   1        _nop_();
  84   1        _nop_();
  85   1        _nop_();
  86   1        _nop_();
  87   1        _nop_();
  88   1        _nop_();
  89   1        _nop_();
  90   1        _nop_();
  91   1        _nop_();
  92   1      }
  93          
  94          /**
  95           * @brief       产生IIC起始信号
  96           * @param       无
  97           * @retval      无
  98           */
  99          void IIC_Start(void)
 100          {
 101   1          IIC_SDA(1);
 102   1          IIC_SCL(1);
 103   1          IIC_delay2us();
 104   1          IIC_SDA(0);     /* START信号: 当SCL为高时, SDA从高变成低, 表示起始信号 */
 105   1          IIC_delay2us();
 106   1          IIC_SCL(0);     /* 钳住I2C总线，准备发送或接收数据 */
 107   1          IIC_delay2us();
 108   1      }
 109          
 110          /**
 111           * @brief       产生IIC停止信号
 112           * @param       无
 113           * @retval      无
 114           */
 115          void IIC_Stop(void)
C51 COMPILER V9.60.7.0   I2C_GPIO                                                          09/27/2024 10:00:24 PAGE 3   

 116          {
 117   1          IIC_SDA(0);     /* STOP信号: 当SCL为高时, SDA从低变成高, 表示停止信号 */
 118   1          IIC_delay2us();
 119   1          IIC_SCL(1);
 120   1          IIC_delay2us();
 121   1          IIC_SDA(1);     /* 发送I2C总线结束信号 */
 122   1          IIC_delay2us();
 123   1      }
 124          
 125          /**
 126           * @brief       等待应答信号到来
 127           * @param       无
 128           * @retval      1，接收应答失败
 129           *              0，接收应答成功
 130           */
 131          uint8_t IIC_Wait_Ack(void)
 132          {
 133   1          uint8_t waittime = 0;
 134   1          uint8_t rack = 0;
 135   1      
 136   1          IIC_SDA(1);     /* 主机释放SDA线(此时外部器件可以拉低SDA线) */
 137   1          IIC_delay2us();
 138   1          IIC_SCL(1);     /* SCL=1, 此时从机可以返回ACK */
 139   1          IIC_delay2us();
 140   1      
 141   1          while (TM1650_SDA)    /* 等待应答 */
 142   1          {
 143   2              waittime++;
 144   2      
 145   2              if (waittime > 250)
 146   2              {
 147   3                  IIC_Stop();
 148   3                  rack = 1;
 149   3                  break;
 150   3              }
 151   2          }
 152   1      
 153   1          IIC_SCL(0);     /* SCL=0, 结束ACK检查 */
 154   1          IIC_delay2us();
 155   1          return rack;
 156   1      }
 157          #if 0
              /**
               * @brief       产生ACK应答
               * @param       无
               * @retval      无
               */
              void IIC_Ack(void)
              {
                  IIC_SDA(0);     /* SCL 0 -> 1  时 SDA = 0,表示应答 */
                  IIC_delay2us();
                  IIC_SCL(1);     /* 产生一个时钟 */
                  IIC_delay2us();
                  IIC_SCL(0);
                  IIC_delay2us();
                  IIC_SDA(1);     /* 主机释放SDA线 */
                  IIC_delay2us();
              }
              
              /**
               * @brief       不产生ACK应答
               * @param       无
C51 COMPILER V9.60.7.0   I2C_GPIO                                                          09/27/2024 10:00:24 PAGE 4   

               * @retval      无
               */
              void IIC_Nack(void)
              {
                  IIC_SDA(1);     /* SCL 0 -> 1  时 SDA = 1,表示不应答 */
                  IIC_delay2us();
                  IIC_SCL(1);     /* 产生一个时钟 */
                  IIC_delay2us();
                  IIC_SCL(0);
                  IIC_delay2us();
              }
              #endif
 190          /**
 191           * @brief       IIC发送一个字节
 192           * @param       data: 要发送的数据
 193           * @retval      无
 194           */
 195          void IIC_Send_Byte(uint8_t dat)
 196          {
 197   1          uint8_t t;
 198   1          
 199   1          for (t = 0; t < 8; t++)
 200   1          {
 201   2              IIC_SDA((dat & 0x80) >> 7);    /* 高位先发送 */
 202   2              IIC_delay2us();
 203   2              IIC_SCL(1);
 204   2              IIC_delay2us();
 205   2              IIC_SCL(0);
 206   2              dat <<= 1;     /* 左移1位,用于下一次发送 */
 207   2          }
 208   1          IIC_SDA(1);         /* 发送完成, 主机释放SDA线 */
 209   1      }
 210          
 211          #if 0
              /**
               * @brief       IIC读取一个字节
               * @param       ack:  ack=1时，发送ack; ack=0时，发送nack
               * @retval      接收到的数据
               */
              uint8_t IIC_Receive_Byte(uint8_t ack)
              {
                  uint8_t i, receive = 0;
              
                  for (i = 0; i < 8; i++ )    /* 接收1个字节数据 */
                  {
                      receive <<= 1;  /* 高位先输出,所以先收到的数据位要左移 */
                      IIC_SCL(1);
                      IIC_delay2us();
              
                      if (TM1650_SDA)      /*高电平读数据*/
                      {
                          receive++;
                      }
                      
                      IIC_SCL(0);
                      IIC_delay2us();
                  }
              
                  if (!ack)
                  {
                      IIC_Nack();     /* 发送nACK */
                  }
C51 COMPILER V9.60.7.0   I2C_GPIO                                                          09/27/2024 10:00:24 PAGE 5   

                  else
                  {
                      IIC_Ack();      /* 发送ACK */
                  }
              
                  return receive;
              }
              #endif
 248          //--------------------------------------------------------------------------------------------
 249          //----  Byte Write----------------------------------------------------------------------------
 250          //--------------------------------------------------------------------------------------------
 251          void I2C_Write_Byte(UINT8 u8Addr, UINT8 u8DAT)
 252          {
 253   1        IIC_Start();
 254   1        IIC_Send_Byte(u8Addr & ~0x01);
 255   1        if (IIC_Wait_Ack() != 0)
 256   1          return;
 257   1        IIC_Send_Byte(u8DAT);
 258   1        if (IIC_Wait_Ack() != 0)
 259   1          return;
 260   1        IIC_Stop();
 261   1      }
 262          
 263          #if 0 
              void I2C_Write_Word(UINT8 u8Addr, UINT8 u8DAT[], UINT8 siz)
              {
                unsigned char  u8Count;
                /* Write Step1 */
                IIC_Start();
                
                /* Write Step2 */
                IIC_Send_Byte(u8Addr & ~0x01);
                if (IIC_Wait_Ack() != 0)
                  return;
                
                /* Write Step3 */
                for (u8Count = 0; u8Count < siz; u8Count++)
                {
                  /* Write Step2 */
                  IIC_Send_Byte(u8DAT[u8Count]);
                  if (IIC_Wait_Ack() != 0)
                    return;
                }
              
                IIC_Stop();
              }
              
              //--------------------------------------------------------------------------------------------
              //----  Byte Read ----------------------------------------------------------------------------
              //--------------------------------------------------------------------------------------------
              UINT8 I2C_Read_Byte(UINT8 u8Addr)
              {
                UINT8 u8Data = 0;
                
                IIC_Start();
                /* Write Step2 */
                IIC_Send_Byte(u8Addr & ~0x01);
                if (IIC_Wait_Ack() != 0)
                  return 0xff;
                /* Step13 */
                u8Data = IIC_Receive_Byte(1);
                      
C51 COMPILER V9.60.7.0   I2C_GPIO                                                          09/27/2024 10:00:24 PAGE 6   

                /* Step15 */
                IIC_Stop();
                return u8Data;
              }
              //========================================================================================================
              
              #endif
C51 COMPILER V9.60.7.0   I2C_GPIO                                                          09/27/2024 10:00:24 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B1H  1
uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
P0M2 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B2H  1
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
PWMCON0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
_IIC_SDA . . . . . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  val. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
TA . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C7H  1
_IIC_SCL . . . . . . . . . . . . . . .  STATIC   CODE   PROC     0006H  -----
  val. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
_I2C_Write_Byte. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  u8Addr . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  u8DAT. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0004H  1
UINT32 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
TM1650_SDA . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
UINT16 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
TM1650_SCL . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
BIT_TMP. . . . . . . . . . . . . . . .  EXTERN   DATA   BIT      -----  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_IIC_Send_Byte . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  t. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
IIC_Wait_Ack . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  waittime . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  rack . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
SFRS . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
SCON_1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
IIC_Start. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IIC_Init . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ADCCON0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
I2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
IIC_Stop . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
BIT. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  BIT      -----  1
IIC_delay2us . . . . . . . . . . . . .  STATIC   CODE   PROC     0003H  -----
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
UINT8. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    277    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   I2C_GPIO                                                          09/27/2024 10:00:24 PAGE 8   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
