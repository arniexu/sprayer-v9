C51 COMPILER V9.60.7.0   UART                                                              09/15/2024 17:56:51 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: D:\tool chain\keil c51 v6\C51\BIN\C51.EXE StdDriver\src\uart.c LARGE OPTIMIZE(0,SPEED) BROWSE INCDI
                    -R(.\Device\Include;.\StdDriver\inc;.\RTX Tiny2\inc;.\TM1650;.\Application) DEFINE(FOSC_240000) DEBUG OBJECTEXTEND SYMBOL
                    -S PRINT(.\Listings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          /*********************************************************************************************************
             -**/
   8          /*  Website: http://www.nuvoton.com                                                                       
             - */
   9          /*  E-Mail : MicroC-8bit@nuvoton.com                                                                      
             - */
  10          /*  Date   : Jan/21/2020                                                                                  
             - */
  11          /*********************************************************************************************************
             -**/
  12          #include "MS51_16K.H"
  13          bit PRINTFG = 0, uart0_receive_flag = 0, uart1_receive_flag;
  14          unsigned char uart0_receive_data, uart1_receive_data;
  15          
  16          
  17          
  18          void Serial_ISR(void) interrupt 4
  19          {
  20   1          _push_(SFRS);
  21   1        
  22   1          if (RI)
  23   1          {
  24   2              uart0_receive_flag = 1;
  25   2              uart0_receive_data = SBUF;
  26   2              clr_SCON_RI;                                         // Clear RI (Receive Interrupt).
  27   2          }
  28   1      
  29   1          if (TI)
  30   1          {
  31   2              if (!PRINTFG)
  32   2              {
  33   3                  TI = 0;
  34   3              }
  35   2          }
  36   1      
  37   1          _pop_(SFRS);
  38   1      } 
  39          
  40          
  41          
  42          void SerialPort1_ISR(void) interrupt 15
  43          {
C51 COMPILER V9.60.7.0   UART                                                              09/15/2024 17:56:51 PAGE 2   

  44   1          _push_(SFRS);
  45   1        
  46   1          if (RI_1)
  47   1          {
  48   2              uart1_receive_data = SBUF_1;
  49   2              uart1_receive_flag = 1;
  50   2              clr_SCON_1_RI_1;                             /* clear reception flag for next reception */
  51   2          }
  52   1      
  53   1          if (TI_1 == 1)
  54   1          {
  55   2              if (!PRINTFG)
  56   2              {
  57   3                  clr_SCON_1_TI_1;                             /* if emission occur */
  58   3              }
  59   2          }
  60   1      
  61   1          _pop_(SFRS);
  62   1      }
  63          
  64          /*MS51 new version buadrate */
  65          void UART_Open(unsigned long u32SysClock, unsigned char u8UARTPort,unsigned long u32Baudrate)
  66          {
  67   1        switch(u8UARTPort)
  68   1        {
  69   2          case UART0_Timer1:
  70   2                SCON = 0x50;       //UART0 Mode1,REN=1,TI=1
  71   2                TMOD |= 0x20;      //Timer1 Mode1
  72   2                set_PCON_SMOD;          //UART0 Double Rate Enable
  73   2                set_CKCON_T1M;
  74   2                clr_T3CON_BRCK;          //Serial port 0 baud rate clock source = Timer1
  75   2                TH1 = 256 - (u32SysClock/16/u32Baudrate);
  76   2                set_TCON_TR1;
  77   2            break;
  78   2            
  79   2            case UART0_Timer3:
  80   2                SCON = 0x50;     //UART0 Mode1,REN=1,TI=1
  81   2                set_PCON_SMOD;        //UART0 Double Rate Enable
  82   2                T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  83   2                set_T3CON_BRCK;        //UART0 baud rate clock source = Timer3
  84   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
  85   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));  
  86   2                set_T3CON_TR3;         //Trigger Timer3
  87   2            break;
  88   2            
  89   2            case UART1_Timer3:
  90   2                SCON_1 = 0x50;     //UART1 Mode1,REN_1=1,TI_1=1
  91   2                T3CON = 0x80;     //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1
  92   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));  
  93   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));     
  94   2                set_T3CON_TR3;             //Trigger Timer3                                                     
             -        
  95   2            break; 
  96   2        }
  97   1      }
  98          
  99          #if 0 
              unsigned char Receive_Data(unsigned char UARTPort)
              {
                  UINT8 c;
                  switch (UARTPort)
                  {
C51 COMPILER V9.60.7.0   UART                                                              09/15/2024 17:56:51 PAGE 3   

                    case UART0:
                      while (!RI);
                      c = SBUF;
                      RI = 0;
                    break;
                    case UART1:
                      while (!RI_1);
                      c = SBUF_1;
                      RI_1 = 0;
                    break;
                  }
                  return (c);
              }
              #endif
 119          
 120          void UART_Send_Data(UINT8 UARTPort, UINT8 c)
 121          {
 122   1          switch (UARTPort)
 123   1          {
 124   2            case UART0:
 125   2              SBUF = c;
 126   2            break;
 127   2            case UART1:
 128   2              SBUF_1 = c;
 129   2            break;
 130   2          }
 131   1      }
 132          
 133          void Enable_UART0_VCOM_printf_24M_115200(void)
 134          {
 135   1          P06_QUASI_MODE;
 136   1          UART_Open(24000000,UART0_Timer1,115200);
 137   1          ENABLE_UART0_PRINTF;
 138   1      }
C51 COMPILER V9.60.7.0   UART                                                              09/15/2024 17:56:51 PAGE 4   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0M1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B1H  1
uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
P0M2 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B2H  1
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
PWMCON0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
_UART_Send_Data. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  UARTPort . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  c. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
SerialPort1_ISR. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
TA . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C7H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
PRINTFG. . . . . . . . . . . . . . . .  PUBLIC   DATA   BIT      0000H  1
UINT32 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
UINT16 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
RI_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F8H  1
TI_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F9H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
_UART_Open . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  u32SysClock. . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0000H  4
  u8UARTPort . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0004H  1
  u32Baudrate. . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0005H  4
BIT_TMP. . . . . . . . . . . . . . . .  EXTERN   DATA   BIT      -----  1
Serial_ISR . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
uart0_receive_data . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0000H  1
uart0_receive_flag . . . . . . . . . .  PUBLIC   DATA   BIT      0001H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
uart1_receive_data . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0001H  1
uart1_receive_flag . . . . . . . . . .  PUBLIC   DATA   BIT      0002H  1
SFRS . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
SBUF_1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009AH  1
SCON_1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
Enable_UART0_VCOM_printf_24M_115200. .  PUBLIC   CODE   PROC     0000H  -----
RH3. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C6H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
RL3. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C5H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
ADCCON0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
I2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
BIT. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  BIT      -----  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
T3CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C4H  1
CKCON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
UINT8. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4

C51 COMPILER V9.60.7.0   UART                                                              09/15/2024 17:56:51 PAGE 5   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    664    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     13    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
