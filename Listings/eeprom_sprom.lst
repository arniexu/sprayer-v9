C51 COMPILER V9.60.7.0   EEPROM_SPROM                                                      09/15/2024 17:56:51 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE EEPROM_SPROM
OBJECT MODULE PLACED IN .\Objects\eeprom_sprom.obj
COMPILER INVOKED BY: D:\tool chain\keil c51 v6\C51\BIN\C51.EXE ..\spray\StdDriver\src\eeprom_sprom.c LARGE OPTIMIZE(0,SP
                    -EED) BROWSE INCDIR(.\Device\Include;.\StdDriver\inc;.\RTX Tiny2\inc;.\TM1650;.\Application) DEFINE(FOSC_240000) DEBUG OB
                    -JECTEXTEND SYMBOLS PRINT(.\Listings\eeprom_sprom.lst) TABS(2) OBJECT(.\Objects\eeprom_sprom.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Website: http://www.nuvoton.com
   9          //  E-Mail : MicroC-8bit@nuvoton.com
  10          //********************************************************************************************************
             -***
  11          #include "MS51_16K.h"
  12          
  13          //volatile unsigned char xdata page_buffer[127];
  14          
  15          /**
  16           * @brief       Read Dataflash
  17           * @param       Dataflash start address
  18           * @return      Dataflash Value
  19           * @details     None
  20           */
  21           unsigned char Read_SPROM_BYTE(unsigned char code *u8_addr)
  22          {
  23   1          unsigned char rdata;
  24   1          set_IAPUEN_SPMEN;
  25   1          rdata = *(0xFF80+u8_addr);
  26   1          return rdata;
  27   1      }
  28          
  29          //-------------------------------------------------------------------------
  30          void Write_SPROM_DATAFLASH_ARRAY(unsigned int u16_addr, unsigned char *pDat, unsigned int num)
  31          {
  32   1          unsigned char CPageAddr, EPageAddr, cnt;
  33   1          CPageAddr = u16_addr >> 7;
  34   1          EPageAddr = (u16_addr + num) >> 7;
  35   1      
  36   1          while (CPageAddr != EPageAddr)
  37   1          {
  38   2              cnt = WriteDataToSPOnePage(u16_addr+0xFF80, pDat, 127);
  39   2              u16_addr += cnt;
  40   2              pDat += cnt;
  41   2              num -= cnt;
  42   2              CPageAddr = u16_addr >> 7;
  43   2          }
  44   1      
  45   1          if (num)
  46   1          {
C51 COMPILER V9.60.7.0   EEPROM_SPROM                                                      09/15/2024 17:56:51 PAGE 2   

  47   2              WriteDataToSPOnePage(u16_addr, pDat, num);
  48   2          }
  49   1      }
  50          //-------------------------------------------------------------------------
  51          void Read_SPROM_DATAFLASH_ARRAY(unsigned int u16_addr, unsigned char *pDat, unsigned int num)
  52          {
  53   1          unsigned int i;
  54   1      
  55   1          set_IAPUEN_SPMEN;
  56   1          for (i = 0; i < num; i++)
  57   1              pDat[i] = *(unsigned char code *)(u16_addr+0xFF80 + i);
  58   1      }
  59          
  60          //--------------------------------------------------------------------------------------------------------
             ----
  61          unsigned char WriteDataToSPOnePage(unsigned int u16_addr, const unsigned char *pDat, unsigned char num)
  62          {
  63   1          unsigned char i, offset;
  64   1          unsigned char code *pCode;
  65   1          unsigned char xdata xd_tmp[127];
  66   1      
  67   1          set_CHPCON_IAPEN;
  68   1          set_IAPUEN_SPMEN;
  69   1          set_IAPUEN_SPUEN;
  70   1      
  71   1          offset = u16_addr & 0x007F;
  72   1          i = PAGE_SIZE - offset;
  73   1      
  74   1          if (num > i)num = i;
  75   1      
  76   1          pCode = (unsigned char code *)(0xFFFF);
  77   1          if (pCode == 0)
  78   1          {
  79   2                  IAPAL = 0x80;
  80   2                  IAPAH = 0x01;
  81   2                  IAPCN = PAGE_ERASE_SPROM;
  82   2                  IAPFD = 0xFF;
  83   2                  set_IAPTRG_IAPGO;
  84   2          }
  85   1          
  86   1          pCode = (unsigned char code *)(u16_addr+0xFF80);
  87   1            for (i = 0; i < num; i++)
  88   1          {
  89   2              if (pCode[i] != 0xFF)break;
  90   2          }
  91   1      
  92   1          if (i == num)
  93   1          {
  94   2              IAPCN = BYTE_PROGRAM_SPROM;
  95   2              IAPAL = u16_addr+0x80;
  96   2              IAPAH = 0x01;
  97   2      
  98   2              for (i = 0; i < num; i++)
  99   2              {
 100   3                  IAPFD = pDat[i];
 101   3                  set_IAPTRG_IAPGO;
 102   3                  IAPAL++;
 103   3              }
 104   2      
 105   2              for (i = 0; i < num; i++)
 106   2              {
 107   3                  if (pCode[i] != pDat[i])break;
C51 COMPILER V9.60.7.0   EEPROM_SPROM                                                      09/15/2024 17:56:51 PAGE 3   

 108   3              }
 109   2      
 110   2              if (i != num) goto WriteDataToPage20;
 111   2          }
 112   1          else
 113   1          {
 114   2      WriteDataToPage20:
 115   2              pCode = (unsigned char code *)(0xFF80);
 116   2      
 117   2              for (i = 0; i < 128; i++)
 118   2              {
 119   3                  xd_tmp[i] = pCode[i];
 120   3              }
 121   2      
 122   2              for (i = 0; i < num; i++)
 123   2              {
 124   3                  xd_tmp[offset + i] = pDat[i];
 125   3              }
 126   2      
 127   2              do
 128   2              {
 129   3                  IAPAL = 0x80;
 130   3                  IAPAH = 0x01;
 131   3                  IAPCN = PAGE_ERASE_SPROM;
 132   3                  IAPFD = 0xFF;
 133   3                  set_IAPTRG_IAPGO;
 134   3                  IAPCN = BYTE_PROGRAM_SPROM;
 135   3      
 136   3                  for (i = 0; i < 127; i++)
 137   3                  {
 138   4                      IAPFD = xd_tmp[i];
 139   4                      set_IAPTRG_IAPGO;
 140   4                      IAPAL++;
 141   4                  }
 142   3      
 143   3                  for (i = 0; i < 128; i++)
 144   3                  {
 145   4                      if (pCode[i] != xd_tmp[i])break;
 146   4                  }
 147   3              } while (i != 128);
 148   2      
 149   2          }
 150   1      
 151   1          clr_IAPUEN_SPUEN;
 152   1          clr_CHPCON_IAPEN;
 153   1      
 154   1          return num;
 155   1      }
C51 COMPILER V9.60.7.0   EEPROM_SPROM                                                      09/15/2024 17:56:51 PAGE 4   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
PWMCON0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
_Read_SPROM_BYTE . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  u8_addr. . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  2
  rdata. . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0002H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
TA . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C7H  1
_WriteDataToSPOnePage. . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  u16_addr . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
  pDat . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0002H  3
  num. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0005H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0006H  1
  offset . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0007H  1
  pCode. . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0008H  2
  xd_tmp . . . . . . . . . . . . . . .  AUTO     XDATA  ARRAY    000AH  127
  WriteDataToPage20. . . . . . . . . .  LABEL    CODE   LABEL    -----  -----
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
UINT32 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
UINT16 . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
BIT_TMP. . . . . . . . . . . . . . . .  EXTERN   DATA   BIT      -----  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
CHPCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009FH  1
_Read_SPROM_DATAFLASH_ARRAY. . . . . .  PUBLIC   CODE   PROC     0000H  -----
  u16_addr . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
  pDat . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0002H  3
  num. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0005H  2
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0007H  2
IAPUEN . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A5H  1
SCON_1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
IAPTRG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A4H  1
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
_Write_SPROM_DATAFLASH_ARRAY . . . . .  PUBLIC   CODE   PROC     0000H  -----
  u16_addr . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
  pDat . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0002H  3
  num. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0005H  2
  CPageAddr. . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0007H  1
  EPageAddr. . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0008H  1
  cnt. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0009H  1
ADCCON0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
I2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
BIT. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  BIT      -----  1
IAPAH. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A7H  1
IAPFD. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AEH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
IAPAL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A6H  1
IAPCN. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AFH  1
UINT8. . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4


C51 COMPILER V9.60.7.0   EEPROM_SPROM                                                      09/15/2024 17:56:51 PAGE 5   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1257    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    159    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
